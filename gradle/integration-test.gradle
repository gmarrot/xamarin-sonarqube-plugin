sourceSets {
    integrationTest {
        java.srcDirs = [file('src/integration-test/java')]
        kotlin.srcDirs = [file('src/integration-test/kotlin')]
        resources.srcDirs = [file('src/integration-test/resources')]

        compileClasspath += sourceSets.main.output + configurations.integrationTestCompile
        runtimeClasspath += output + sourceSets.main.output + configurations.integrationTestRuntime
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestCompile.extendsFrom testCompile
    integrationTestCompileOnly.extendsFrom testCompileOnly
    integrationTestRuntime.extendsFrom testRuntime
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
    integrationTestAnnotationProcessor.extendsFrom testAnnotationProcessor
}

idea {
    module {
        testSourceDirs += sourceSets.integrationTest.java.srcDirs
        testSourceDirs += sourceSets.integrationTest.kotlin.srcDirs
        testResourceDirs += sourceSets.integrationTest.resources.srcDirs

        scopes.TEST.plus += [configurations.integrationTestCompile, configurations.integrationTestRuntime, configurations.integrationTestAnnotationProcessor]
    }
}

compileIntegrationTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task integrationTest(type: Test, group: JavaBasePlugin.VERIFICATION_GROUP) {
    description = 'Run the integration tests.'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath

    outputs.upToDateWhen { false }
    mustRunAfter test

    useJUnitPlatform()
}

check.dependsOn integrationTest

gradlePlugin {
    testSourceSets sourceSets.integrationTest
}